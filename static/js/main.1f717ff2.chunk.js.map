{"version":3,"sources":["util/emoji/emoji.type.ts","util/emoji/emoji-list.const.ts","hooks/useEmojiFavorites.tsx","hooks/useEmojiVariant.tsx","components/emoji/DisplayEmoji.tsx","components/emoji-table/EmojiCard.tsx","components/emoji-table/FullscreenEmoji.tsx","components/emoji-table/EmojiTable.tsx","components/emoji-table/EmojiFavoriteTable.tsx","hooks/useShouldShowPrompt.tsx","hooks/useWebInstallPrompt.tsx","components/install-prompt/WebInstallPrompt.tsx","components/layout/Footer.tsx","util/emoji/variantSelectOptions.ts","components/emoji/VariantSelect.tsx","components/layout/Header.tsx","util/math/random.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["EmojiVariants","emojiVariantMapping","APPLE","WHATSAPP","MICROSOFT","TWITTER","GOOGLE","OPENMOJI","baseUrl","emojiList","variant","emojiSrc","file","id","src","altSrc","emojiFavoriteContext","createContext","ProvideEmojiFavorites","children","emojiFavorites","useState","storedEmojis","localStorageValue","localStorage","getItem","JSON","parse","Array","isArray","mappedEmojis","map","storedEmoji","find","emoji","filter","Boolean","getInitialValue","favorites","setFavorites","updateLocalStorage","useCallback","newFavorites","setItem","stringify","toggleFavorite","favorite","newState","index","findIndex","splice","push","useProvideEmojiFavorites","Provider","value","useEmojiFavories","useContext","emojiVariantContext","ProvideEmojiVariant","emojiVariant","storedValue","parseInt","isNaN","setStoredVariant","setVariant","newVariant","String","useProvideEmojiVariant","useEmojiVariant","DisplayEmoji","props","alt","loading","EmojiCard","onClick","mouseStart","setMouseStart","moved","setMoved","clientX","clientY","touchStartPos","setTouchStartPos","handleCursorDown","Date","getTime","handleTouchStart","e","touches","handleTouchMove","Math","abs","undefined","handleCursorUp","holdDownMs","useEffect","timeoutId","window","setTimeout","clearTimeout","className","onMouseDown","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","preventDefault","FullscreenEmoji","onClose","EmojiTable","emojis","fullscreenEmoji","setFullscreenEmoji","onDialogClose","document","body","style","overflow","history","pushState","location","pathname","popStateHandler","back","addEventListener","removeEventListener","key","EmojiFavoriteTable","favoriteEmojis","useMemo","favoritedEmojis","length","role","aria-label","setInstallPromptSeenToday","promptName","today","formatISO","getUserShouldBePromptedToInstall","daysToWaitBeforePromptingAgain","lastSeenAt","getInstallPromptLastSeenAt","lastPrompt","parseISO","daysSinceLastPrompt","differenceInDays","useWebInstallPrompt","installPromptEvent","setInstallPromptEvent","userShouldBePromptedToInstall","setUserShouldBePromptedToInstall","handleUserSeeingInstallPrompt","useShouldShowPrompt","beforeInstallPromptHandler","event","console","log","prompt","userChoice","then","choice","outcome","WebInstallPrompt","webInstallPrompt","handleWebInstallDeclined","handleWebInstallAccepted","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","Footer","href","d","emojiVariantSelectOptions","label","VariantSelect","onChange","Number","target","Header","setIndex","setEmoji","min","max","float","randomNumber","random","floor","randomBetween","App","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mMAQYA,E,yEAAAA,O,iBAAAA,I,uBAAAA,I,yBAAAA,I,qBAAAA,I,mBAAAA,I,wBAAAA,M,KCNZ,IAAMC,GAAkD,mBACrDD,EAAcE,MAAQ,cAD+B,cAErDF,EAAcG,SAAW,iBAF4B,cAGrDH,EAAcI,UAAY,kBAH2B,cAIrDJ,EAAcK,QAAU,gBAJ6B,cAKrDL,EAAcM,OAAS,eAL8B,cAMrDN,EAAcO,SAAW,iBAN4B,GASlDC,EACJ,yEAEWC,EAAiD,SAACC,GAAa,IAAD,0BACnEC,EAAW,SAACC,GAChB,OAAOJ,EAAUP,EAAoBS,GAAWE,GAGlD,MAAO,CACL,CACEC,GAAI,eACJC,IAAKH,EAAS,6CAEhB,CACEE,GAAI,eACJC,IAAKH,EAAS,qCAEhB,CACEE,GAAI,eACJC,IAAKH,EAAS,2BAEhB,CACEE,GAAI,iBACJC,IAAKH,EAAS,qCAEhB,CACEE,GAAI,gBACJC,IAAKH,EAAS,iDACdI,QAAM,mBACHf,EAAcM,OAASK,EACtB,2CAFE,cAIHX,EAAcK,QAAUM,EACvB,2CALE,cAOHX,EAAcO,SAAWI,EACxB,2CARE,IAYR,CACEE,GAAI,gBACJC,IAAKH,EAAS,0CACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,uCAD7B,cAEHX,EAAcK,QAAUM,EAAS,uCAF9B,cAGHX,EAAcO,SAAWI,EACxB,uCAJE,IAQR,CACEE,GAAI,eACJC,IAAKH,EAAS,mDACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,4BAD7B,cAEHX,EAAcK,QAAUM,EAAS,4BAF9B,cAGHX,EAAcO,SAAWI,EAAS,4BAH/B,IAMR,CACEE,GAAI,eACJC,IAAKH,EAAS,4BAEhB,CACEE,GAAI,eACJC,IAAKH,EAAS,gDACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,4BAD7B,cAEHX,EAAcK,QAAUM,EAAS,4BAF9B,cAGHX,EAAcO,SAAWI,EAAS,4BAH/B,IAMR,CACEE,GAAI,SACJC,IAAKH,EAAS,8BACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,0BAD7B,cAEHX,EAAcK,QAAUM,EAAS,0BAF9B,cAGHX,EAAcO,SAAWI,EAAS,0BAH/B,IAMR,CACEE,GAAI,YACJC,IAAKH,EAAS,4BACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,wBAD7B,cAEHX,EAAcK,QAAUM,EAAS,wBAF9B,cAGHX,EAAcO,SAAWI,EAAS,wBAH/B,IAMR,CACEE,GAAI,cACJC,IAAKH,EAAS,8BACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,0BAD7B,cAEHX,EAAcK,QAAUM,EAAS,0BAF9B,cAGHX,EAAcO,SAAWI,EAAS,0BAH/B,IAMR,CACEE,GAAI,KACJC,IAAKH,EAAS,0BACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,sBAD7B,cAEHX,EAAcK,QAAUM,EAAS,sBAF9B,cAGHX,EAAcO,SAAWI,EAAS,sBAH/B,IAMR,CACEE,GAAI,kBACJC,IAAKH,EAAS,wDACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,8BAD7B,cAEHX,EAAcK,QAAUM,EAAS,8BAF9B,cAGHX,EAAcO,SAAWI,EAAS,8BAH/B,IAMR,CACEE,GAAI,kBACJC,IAAKH,EAAS,8CAEhB,CACEE,GAAI,oBACJC,IAAKH,EAAS,gDAEhB,CACEE,GAAI,OACJC,IAAKH,EAAS,wBAEhB,CACEE,GAAI,UACJC,IAAKH,EAAS,mBAEhB,CACEE,GAAI,YACJC,IAAKH,EAAS,wCACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,gCAD7B,cAEHX,EAAcK,QAAUM,EAAS,gCAF9B,cAGHX,EAAcO,SAAWI,EAAS,gCAH/B,IAMR,CACEE,GAAI,QACJC,IAAKH,EAAS,2BAEhB,CACEE,GAAI,QACJC,IAAKH,EAAS,2BAEhB,CACEE,GAAI,aACJC,IAAKN,EAAU,sCACfO,QAAM,mBACHf,EAAcK,QAAUM,EAAS,yBAD9B,cAEHX,EAAcO,SAAWI,EAAS,yBAF/B,IAKR,CACEE,GAAI,YACJC,IAAKH,EAAS,iCAEhB,CACEE,GAAI,aACJC,IAAKH,EAAS,yBAEhB,CACEE,GAAI,gBACJC,IAAKH,EAAS,2CAEhB,CACEE,GAAI,cACJC,IAAKH,EAAS,yCAEhB,CACEE,GAAI,QACJC,IAAKH,EAAS,sCACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,oBAD7B,cAEHX,EAAcK,QAAUM,EAAS,oBAF9B,cAGHX,EAAcO,SAAWI,EAAS,oBAH/B,IAMR,CACEE,GAAI,MACJC,IAAKH,EAAS,uCAEhB,CACEE,GAAI,OACJC,IAAKH,EAAS,8BACdI,QAAM,mBACHf,EAAcM,OAASK,EAAS,kBAD7B,cAEHX,EAAcK,QAAUM,EAAS,kBAF9B,cAGHX,EAAcO,SAAWI,EAAS,kBAH/B,IAMR,CACEE,GAAI,YACJC,IAAKH,EAAS,oCCjMdK,EAAuBC,wBAC3B,IAGK,SAASC,EAAT,GAAwE,IAAvCC,EAAsC,EAAtCA,SAChCC,EAoCR,WAAqC,IAAD,EACAC,mBAzBpC,WACE,IAAIC,EACEC,EAAoBC,aAAaC,QArBjB,kBAuBtB,GAAIF,EAAmB,CACrB,IACED,EAAeI,KAAKC,MAAMJ,GAC1B,SACAD,EAAe,KAGjB,GAAIA,GAAgBM,MAAMC,QAAQP,GAAe,CAC/C,IAAIQ,EAAeR,EAAaS,KAAI,SAACC,GAAD,OAClCvB,EAAUT,EAAcE,OAAO+B,MAC7B,SAACC,GAAD,OAAWF,EAAYnB,KAAOqB,EAAMrB,SAIxC,OADAiB,EAAeA,EAAaK,OAAOC,UACf,GAAMN,EAA2B,IAGzD,MAAO,GAI6CO,IADlB,mBAC3BC,EAD2B,KAChBC,EADgB,KAG5BC,EAAqBC,uBAAY,SAACC,GACtClB,aAAamB,QA/CO,iBA+CkBjB,KAAKkB,UAAUF,MACpD,IAEGG,EAAiBJ,uBACrB,SAACK,GACC,IAAMC,EAAQ,YAAOT,GAEfU,EAAQD,EAASE,WAAU,SAACf,GAAD,OAAWA,EAAMrB,KAAOiC,EAASjC,OACnD,IAAXmC,EACFD,EAASG,OAAOF,EAAO,GAEvBD,EAASI,KAAKL,GAGhBP,EAAaQ,GACbP,EAAmBO,KAErB,CAACT,EAAWC,EAAcC,IAG5B,MAAO,CAAEF,YAAWO,kBA5DGO,GACvB,OACE,kBAACpC,EAAqBqC,SAAtB,CAA+BC,MAAOlC,GACnCD,GA2DQoC,MAtDiB,WAC9B,OAAOC,qBAAWxC,I,QCrBdyC,EAAsBxC,wBAC1B,IAGK,SAASyC,EAAT,GAAsE,IAAvCvC,EAAsC,EAAtCA,SAC9BwC,EAsBR,WAAmC,IAAD,EACItC,mBAXtC,WACE,IAAMuC,EAAcC,SAASrC,aAAaC,QApBpB,kBAoBgD,GAAI,IAE1E,OAAImC,IAAgBE,MAAMF,IAAgB5D,EAAc4D,GAC/CA,EAEA,EAMPvB,IAF8B,mBACzB3B,EADyB,KAChBqD,EADgB,KAUhC,MAAO,CAAErD,UAASsD,WALC,SAACC,GAClBzC,aAAamB,QAnCO,gBAmCkBuB,OAAOD,IAC7CF,EAAiBE,KA7BEE,GACrB,OACE,kBAACV,EAAoBJ,SAArB,CAA8BC,MAAOK,GAClCxC,GAKA,IAAMiD,EAAkB,WAC7B,OAAOZ,qBAAWC,IAyBLW,QCxCR,SAASC,EAAT,GAA+D,IAAvCnC,EAAsC,EAAtCA,MAAUoC,EAA4B,yBAC3D5D,EAAY0D,IAAZ1D,QAER,OACE,yCACM4D,EADN,CAEExD,IAAMoB,EAAMnB,QAAUmB,EAAMnB,OAAOL,IAAawB,EAAMpB,IACtDyD,IAAI,GACJC,QAAQ,UCPP,SAASC,EAAT,GAAwD,IAAnCvC,EAAkC,EAAlCA,MAAOwC,EAA2B,EAA3BA,QACzB7B,EAAmBU,IAAnBV,eADoD,EAGxBxB,qBAHwB,mBAGrDsD,EAHqD,KAGzCC,EAHyC,OAIlCvD,oBAAkB,GAJgB,mBAIrDwD,EAJqD,KAI9CC,EAJ8C,OAKlBzD,mBAGvC,CACD0D,QAAS,EACTC,QAAS,IAViD,mBAKrDC,EALqD,KAKtCC,EALsC,KAatDC,EAAmB1C,uBAAY,WACnCmC,GAAc,IAAIQ,MAAOC,WACzBP,GAAS,KACR,IAEGQ,EAAmB7C,uBACvB,SAAC8C,GACCL,EAAiBK,EAAEC,QAAQ,IAC3BL,MAEF,CAACA,IAGGM,EAAkBhD,uBACtB,SAAC8C,GAA4C,IAAD,EACbA,EAAEC,QAAQ,GAA/BT,EADkC,EAClCA,QAASC,EADyB,EACzBA,SAEfU,KAAKC,IAAIV,EAAcF,QAAUA,GAAW,IAC5CW,KAAKC,IAAIV,EAAcD,QAAUA,GAAW,MAE5CF,GAAS,GACTF,OAAcgB,MAGlB,CAACX,IAGGY,EAAiBpD,uBAAY,WACjC,GAAIkC,IAAeE,EAAO,CACxB,IAAMiB,GAAa,IAAIV,MAAOC,UAAYV,EAC1CC,OAAcgB,GAEVE,EAAa,IACfpB,EAAQxC,GAERW,EAAeX,MAGlB,CAACyC,EAAYE,EAAO3C,EAAOwC,EAAS7B,IAavC,OAXAkD,qBAAU,WACR,IAAIC,EAKJ,OAJIrB,IACFqB,EAAYC,OAAOC,WAAWL,EAAgB,MAGzC,WACLI,OAAOE,aAAaH,MAErB,CAACrB,EAAYkB,IAGd,yBAAKO,UAAU,gCACb,4BACEA,UACE,2JACCzB,EAAa,UAAY,IAE5B0B,YAAalB,EACbmB,UAAWT,EACXU,aAAcjB,EACdkB,YAAaf,EACbgB,WAAY,SAAClB,GACXA,EAAEmB,iBACFb,MAEF,kBAACxB,EAAD,CAAcnC,MAAOA,EAAOkE,UAAU,gBACtC,0BAAMA,UAAU,kFACblE,EAAMrB,MClFV,SAAS8F,EAAT,GAAoE,IAAzCzE,EAAwC,EAAxCA,MAAO0E,EAAiC,EAAjCA,QACvC,OACE,yBACER,UAAU,sFACV1B,QAASkC,GACT,kBAACvC,EAAD,CACEnC,MAAOA,EACPkE,UAAU,wDCPX,SAASS,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,OAA2B,EACRzF,mBAAuB,MADf,mBAC/C0F,EAD+C,KAC9BC,EAD8B,KAGhDC,EAAgBxE,uBAAY,WAChCuE,EAAmB,QAClB,CAACA,IA6BJ,OA3BAjB,qBAAU,WACJgB,GACFG,SAASC,KAAKC,MAAMC,SAAW,SAC/BpB,OAAOqB,QAAQC,UACb,KACA,wBACAtB,OAAOuB,SAASC,WAGlBP,SAASC,KAAKC,MAAMC,SAAW,OAGjC,IAAMK,EAAkB,SAACnC,GACnBwB,EACFC,EAAmB,MAEnBf,OAAOqB,QAAQK,QAMnB,OAFA1B,OAAO2B,iBAAiB,WAAYF,GAE7B,WACLzB,OAAO4B,oBAAoB,WAAYH,MAExC,CAACX,IAGF,oCACE,yBAAKX,UAAU,gFACZU,EAAO/E,KAAI,SAACG,GAAD,OACV,kBAACuC,EAAD,CACEqD,IAAK5F,EAAMrB,GACXqB,MAAOA,EACPwC,QAASsC,QAIdD,GACC,kBAACJ,EAAD,CAAiBzE,MAAO6E,EAAiBH,QAASK,KC9CnD,SAASc,EAAT,GAAkE,IAApCjB,EAAmC,EAAnCA,OAC3BxE,EAAciB,IAAdjB,UAEF0F,EAAiBC,mBAAQ,WAC7B,IAAIC,EAAkB5F,EAAUP,KAAI,SAACe,GAAD,OAClCgE,EAAO7E,MAAK,SAACC,GAAD,OAAWA,EAAMrB,KAAOiC,EAASjC,SAG/C,OADAqH,EAAkBA,EAAgB/F,OAAOC,UAClB,GAAM8F,EAA8B,KAC1D,CAACpB,EAAQxE,IAEZ,OAAO0F,EAAeG,OACpB,kBAACtB,EAAD,CAAYC,OAAQkB,IAEpB,yBAAK5B,UAAU,mGACb,0BAAMA,UAAU,qDAAhB,0CAC0C,IACxC,0BAAMgC,KAAK,MAAMC,aAAW,YAA5B,iBAIF,0BAAMjC,UAAU,6BAAhB,sDACsD,IACpD,0BAAMgC,KAAK,MAAMC,aAAW,cAA5B,kB,4BCxBFC,EAA4B,SAACC,GACjC,IAAMC,EAAQC,YAAU,IAAIrD,MAC5B5D,aAAamB,QAAQ4F,EAAYC,IAGnC,SAASE,EACPH,EACAI,GAEA,IAAMC,EAZ2B,SAACL,GAAD,OACjC/G,aAAaC,QAAQ8G,GAWFM,CAA2BN,GAE9C,GAAKK,EAEE,CACL,IAAME,EAAaC,YAASH,GACtBI,EAAsBC,YAAiBH,EAAY,IAAI1D,MAC7D,OACEtB,MAAMkF,IACNA,EAAsBL,EANxB,OAAO,ECfX,IAuDeO,EArDa,WAAsC,IAAD,EACX7H,qBADW,mBACxD8H,EADwD,KACpCC,EADoC,ODwB1D,SACLb,GAEwB,IADxBI,EACuB,uDADU,GACV,EAInBtH,mBACFqH,EAAiCH,EAAYI,IALxB,mBAErBU,EAFqB,KAGrBC,EAHqB,KAQjBC,EAAgC,WACpCD,GAAiC,GACjChB,EAA0BC,IAG5B,MAAO,CAACc,EAA+BE,GChCnCC,CAVuB,wBAEoC,mBAM7DH,EAN6D,KAO7DE,EAP6D,KAU/DxD,qBAAU,WACR,IAAM0D,EAA6B,SAACC,GAClCC,QAAQC,IAAIF,GACZA,EAAMhD,iBAGF2C,GAEFD,EAAsBM,IAM1B,OAFAzD,OAAO2B,iBAAiB,sBAAuB6B,GAExC,kBACLxD,OAAO4B,oBACL,sBACA4B,MAEH,CAACJ,IAsBJ,MAAO,CAACF,EApBsB,WAC5BI,IACAH,OAAsBxD,IAGM,WACxBuD,IAEFA,EAAmBU,SAGnBV,EAAmBW,WAAWC,MAAK,SAACC,GAEX,aAAnBA,EAAOC,SACTV,IAEFH,OAAsBxD,UCnDvB,SAASsE,IAAoB,IAAD,EAK7BhB,IAL6B,mBAE/BiB,EAF+B,KAG/BC,EAH+B,KAI/BC,EAJ+B,KAOjC,OAAKF,EAKH,yBAAK/D,UAAU,0BACb,yBAAKA,UAAU,qFACb,0BAAMA,UAAU,mCAAhB,iCAGA,4BACEA,UAAU,0FACV1B,QAAS2F,GACT,yBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,SACf,8BAAUC,OAAO,qBAGrB,4BACErG,QAAS0F,EACThE,UAAU,yFACV,yBACEkE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,SACf,0BAAME,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC/B,0BAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,WAvChC,KCTJ,SAASC,IACd,OACE,yBAAKhF,UAAU,uEACb,0BAAMA,UAAU,cAAhB,8BACA,yBAAKA,UAAU,cACb,uBACEA,UAAU,wEACViF,KAAK,gDACL,yBACEf,MAAM,6BACNlE,UAAU,gBACVqE,QAAQ,YACRC,KAAK,QACL,0BAAMY,EAAE,8bAGZ,uBACElF,UAAU,wEACViF,KAAK,oDACL,yBACEjF,UAAU,gBACVqE,QAAQ,YACRC,KAAK,OACLJ,MAAM,8BACN,0BAAMgB,EAAE,itBCxBb,IAAMC,EAGP,CACJ,CAAEC,MAAO,QAASlI,MAAOtD,EAAcE,OACvC,CAAEsL,MAAO,YAAalI,MAAOtD,EAAcI,WAC3C,CAAEoL,MAAO,WAAYlI,MAAOtD,EAAcG,UAC1C,CAAEqL,MAAO,SAAUlI,MAAOtD,EAAcM,QACxC,CAAEkL,MAAO,UAAWlI,MAAOtD,EAAcK,SACzC,CAAEmL,MAAO,WAAYlI,MAAOtD,EAAcO,WCPrC,SAASkL,IAAiB,IAAD,EACErH,IAAxB1D,EADsB,EACtBA,QAASsD,EADa,EACbA,WAEjB,OACE,4BACEoC,UAAU,0CACV9C,MAAO5C,EACPgL,SAAU,SAACnG,GACTvB,EAAW2H,OAAOpG,EAAEqG,OAAOtI,UAE5BiI,EAA0BxJ,KAAI,SAACrB,GAAD,OAC7B,4BAAQoH,IAAKpH,EAAQ4C,MAAOA,MAAO5C,EAAQ4C,OACxC5C,EAAQ8K,WCRZ,SAASK,IAAU,IAAD,EACGxK,mBAAiB,GADpB,mBAChB2B,EADgB,KACT8I,EADS,OAEGzK,qBAFH,mBAEhBa,EAFgB,KAET6J,EAFS,KAGfrL,EAAY0D,IAAZ1D,QAUR,OARAqF,qBAAU,WACR+F,ECdG,SACLE,EACAC,EACAC,GAEA,IAAMC,EAAeH,EAAMtG,KAAK0G,UAAYH,EAAMD,GAClD,OAAOE,EAAQC,EAAezG,KAAK2G,MAAMF,GDQ9BG,CAAc,EAAG7L,EAAUT,EAAcE,OAAOiI,WACxD,IAEHpC,qBAAU,WACRgG,EAAStL,EAAUC,GAASsC,MAC3B,CAACtC,EAASsC,IAGX,yBAAKoD,UAAU,wCACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,qBACZlE,GAAS,kBAACmC,EAAD,CAAcnC,MAAOA,EAAOkE,UAAU,cAChD,0BAAMA,UAAU,4CAAhB,uBAIF,kBAACqF,EAAD,QESOc,MA7Bf,WAAgB,IACN7L,EAAY0D,IAAZ1D,QACFoG,EAASmB,mBAAQ,kBAAMxH,EAAUC,KAAU,CAACA,IAElD,OACE,6BACE,kBAACmL,EAAD,MACA,yBAAKzF,UAAU,+BACb,wBAAIA,UAAU,8BACZ,0BAAMgC,KAAK,MAAMC,aAAW,QAA5B,UAEQ,IAHV,oBAMA,kBAACN,EAAD,CAAoBjB,OAAQA,IAC5B,wBAAIV,UAAU,8BACZ,0BAAMgC,KAAK,MAAMC,aAAW,YAA5B,gBAEQ,IAHV,oBAMA,kBAACxB,EAAD,CAAYC,OAAQA,KAEtB,kBAACsE,EAAD,MACA,kBAAClB,EAAD,QCtBAsC,EAAcpK,QACW,cAA7B6D,OAAOuB,SAASiF,UAEe,UAA7BxG,OAAOuB,SAASiF,UAEhBxG,OAAOuB,SAASiF,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACT7C,MAAK,SAAAkD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1B5D,QAAQC,IACN,iHAKEiD,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlBtD,QAAQC,IAAI,sCAGRiD,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,WAO5BS,OAAM,SAAAC,GACLhE,QAAQgE,MAAM,4CAA6CA,MCjGjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACpK,EAAD,KACE,kBAACxC,EAAD,KACE,kBAAC,EAAD,SAINgG,SAAS6G,eAAe,SDYnB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIkB,IACpBC,sBACAhI,OAAOuB,SAAS6D,MAEJ6C,SAAWjI,OAAOuB,SAAS0G,OAIvC,OAGFjI,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMgF,EAAK,UAAMqB,sBAAN,sBAEPzB,IAgEV,SAAiCI,EAAeC,GAE9CsB,MAAMvB,EAAO,CACXwB,QAAS,CAAE,iBAAkB,YAE5BrE,MAAK,SAAAsE,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C3B,UAAUC,cAAc2B,MAAM3E,MAAK,SAAAkD,GACjCA,EAAa0B,aAAa5E,MAAK,WAC7B9D,OAAOuB,SAASoH,eAKpBjC,EAAgBC,EAAOC,MAG1Ba,OAAM,WACL/D,QAAQC,IACN,oEAvFAiF,CAAwBjC,EAAOC,GAI/BC,UAAUC,cAAc2B,MAAM3E,MAAK,WACjCJ,QAAQC,IACN,iHAMJ+C,EAAgBC,EAAOC,OCrC/BE,K","file":"static/js/main.1f717ff2.chunk.js","sourcesContent":["export interface Emoji {\n  id: string;\n  src: string;\n  altSrc?: {\n    [x in EmojiVariants]?: string;\n  };\n}\n\nexport enum EmojiVariants {\n  APPLE,\n  WHATSAPP,\n  MICROSOFT,\n  TWITTER,\n  GOOGLE,\n  OPENMOJI,\n}\n","import { Emoji, EmojiVariants } from './emoji.type';\n\nconst emojiVariantMapping: Record<EmojiVariants, string> = {\n  [EmojiVariants.APPLE]: 'apple/237/',\n  [EmojiVariants.WHATSAPP]: 'whatsapp/238/',\n  [EmojiVariants.MICROSOFT]: 'microsoft/209/',\n  [EmojiVariants.TWITTER]: 'twitter/259/',\n  [EmojiVariants.GOOGLE]: 'google/241/',\n  [EmojiVariants.OPENMOJI]: 'openmoji/252/',\n};\n\nconst baseUrl =\n  'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/';\n\nexport const emojiList: (variant: EmojiVariants) => Emoji[] = (variant) => {\n  const emojiSrc = (file: string) => {\n    return baseUrl + emojiVariantMapping[variant] + file;\n  };\n\n  return [\n    {\n      id: 'smiley_smile',\n      src: emojiSrc('smiling-face-with-smiling-eyes_1f60a.png'),\n    },\n    {\n      id: 'smiley_frown',\n      src: emojiSrc('slightly-frowning-face_1f641.png'),\n    },\n    {\n      id: 'smiley_angry',\n      src: emojiSrc('pouting-face_1f621.png'),\n    },\n    {\n      id: 'smiley_shocked',\n      src: emojiSrc('face-screaming-in-fear_1f631.png'),\n    },\n    {\n      id: 'smiley_hearts',\n      src: emojiSrc('smiling-face-with-heart-shaped-eyes_1f60d.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc(\n          'smiling-face-with-heart-eyes_1f60d.png'\n        ),\n        [EmojiVariants.TWITTER]: emojiSrc(\n          'smiling-face-with-heart-eyes_1f60d.png'\n        ),\n        [EmojiVariants.OPENMOJI]: emojiSrc(\n          'smiling-face-with-heart-eyes_1f60d.png'\n        ),\n      },\n    },\n    {\n      id: 'smiley_raised',\n      src: emojiSrc('face-with-one-eyebrow-raised_1f928.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('face-with-raised-eyebrow_1f928.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('face-with-raised-eyebrow_1f928.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc(\n          'face-with-raised-eyebrow_1f928.png'\n        ),\n      },\n    },\n    {\n      id: 'smiley_shush',\n      src: emojiSrc('face-with-finger-covering-closed-lips_1f92b.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('shushing-face_1f92b.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('shushing-face_1f92b.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('shushing-face_1f92b.png'),\n      },\n    },\n    {\n      id: 'smiley_sleep',\n      src: emojiSrc('sleeping-face_1f634.png'),\n    },\n    {\n      id: 'smiley_party',\n      src: emojiSrc('face-with-party-horn-and-party-hat_1f973.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('partying-face_1f973.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('partying-face_1f973.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('partying-face_1f973.png'),\n      },\n    },\n    {\n      id: 'waving',\n      src: emojiSrc('waving-hand-sign_1f44b.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('waving-hand_1f44b.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('waving-hand_1f44b.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('waving-hand_1f44b.png'),\n      },\n    },\n    {\n      id: 'thumbs_up',\n      src: emojiSrc('thumbs-up-sign_1f44d.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('thumbs-up_1f44d.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('thumbs-up_1f44d.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('thumbs-up_1f44d.png'),\n      },\n    },\n    {\n      id: 'thumbs_down',\n      src: emojiSrc('thumbs-down-sign_1f44e.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('thumbs-down_1f44e.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('thumbs-down_1f44e.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('thumbs-down_1f44e.png'),\n      },\n    },\n    {\n      id: 'ok',\n      src: emojiSrc('ok-hand-sign_1f44c.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('ok-hand_1f44c.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('ok-hand_1f44c.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('ok-hand_1f44c.png'),\n      },\n    },\n    {\n      id: 'fingers_crossed',\n      src: emojiSrc('hand-with-index-and-middle-fingers-crossed_1f91e.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('crossed-fingers_1f91e.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('crossed-fingers_1f91e.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('crossed-fingers_1f91e.png'),\n      },\n    },\n    {\n      id: 'raised_hand_man',\n      src: emojiSrc('man-raising-hand_1f64b-200d-2642-fe0f.png'),\n    },\n    {\n      id: 'raised_hand_woman',\n      src: emojiSrc('woman-raising-hand_1f64b-200d-2640-fe0f.png'),\n    },\n    {\n      id: 'cake',\n      src: emojiSrc('shortcake_1f370.png'),\n    },\n    {\n      id: 'on_fire',\n      src: emojiSrc('fire_1f525.png'),\n    },\n    {\n      id: 'hourglass',\n      src: emojiSrc('hourglass-with-flowing-sand_23f3.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('hourglass-not-done_23f3.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('hourglass-not-done_23f3.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('hourglass-not-done_23f3.png'),\n      },\n    },\n    {\n      id: 'party',\n      src: emojiSrc('party-popper_1f389.png'),\n    },\n    {\n      id: 'magic',\n      src: emojiSrc('crystal-ball_1f52e.png'),\n    },\n    {\n      id: 'magic_wand',\n      src: baseUrl + 'emojipedia/240/magic-wand_1fa84.png',\n      altSrc: {\n        [EmojiVariants.TWITTER]: emojiSrc('magic-wand_1fa84.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('magic-wand_1fa84.png'),\n      },\n    },\n    {\n      id: 'telephone',\n      src: emojiSrc('telephone-receiver_1f4de.png'),\n    },\n    {\n      id: 'microphone',\n      src: emojiSrc('microphone_1f3a4.png'),\n    },\n    {\n      id: 'walking_woman',\n      src: emojiSrc('woman-walking_1f6b6-200d-2640-fe0f.png'),\n    },\n    {\n      id: 'walking_man',\n      src: emojiSrc('man-walking_1f6b6-200d-2642-fe0f.png'),\n    },\n    {\n      id: 'joker',\n      src: emojiSrc('playing-card-black-joker_1f0cf.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('joker_1f0cf.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('joker_1f0cf.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('joker_1f0cf.png'),\n      },\n    },\n    {\n      id: 'wtf',\n      src: emojiSrc('exclamation-question-mark_2049.png'),\n    },\n    {\n      id: 'star',\n      src: emojiSrc('white-medium-star_2b50.png'),\n      altSrc: {\n        [EmojiVariants.GOOGLE]: emojiSrc('star_2b50.png'),\n        [EmojiVariants.TWITTER]: emojiSrc('star_2b50.png'),\n        [EmojiVariants.OPENMOJI]: emojiSrc('star_2b50.png'),\n      },\n    },\n    {\n      id: 'cant_hear',\n      src: emojiSrc('hear-no-evil-monkey_1f649.png'),\n    },\n  ];\n};\n","import React, {\n  createContext,\n  ReactChild,\n  useCallback,\n  useContext,\n  useState,\n} from 'react';\nimport { emojiList } from '../util/emoji/emoji-list.const';\nimport { Emoji, EmojiVariants } from '../util/emoji/emoji.type';\n\ntype provideEmojiFavorites = {\n  favorites: Emoji[];\n  toggleFavorite: (e: Emoji) => void;\n};\n\nconst localStorageKey = 'emoji-favories';\n\nconst emojiFavoriteContext = createContext<provideEmojiFavorites>(\n  {} as provideEmojiFavorites\n);\n\nexport function ProvideEmojiFavorites({ children }: { children: ReactChild }) {\n  const emojiFavorites = useProvideEmojiFavorites();\n  return (\n    <emojiFavoriteContext.Provider value={emojiFavorites}>\n      {children}\n    </emojiFavoriteContext.Provider>\n  );\n}\n\nexport const useEmojiFavories = () => {\n  return useContext(emojiFavoriteContext);\n};\n\nfunction getInitialValue(): Emoji[] {\n  let storedEmojis: Emoji[] | null;\n  const localStorageValue = localStorage.getItem(localStorageKey);\n\n  if (localStorageValue) {\n    try {\n      storedEmojis = JSON.parse(localStorageValue);\n    } catch {\n      storedEmojis = null;\n    }\n\n    if (storedEmojis && Array.isArray(storedEmojis)) {\n      let mappedEmojis = storedEmojis.map((storedEmoji) =>\n        emojiList(EmojiVariants.APPLE).find(\n          (emoji) => storedEmoji.id === emoji.id\n        )\n      );\n      mappedEmojis = mappedEmojis.filter(Boolean);\n      return mappedEmojis[0] ? (mappedEmojis as Emoji[]) : [];\n    }\n  }\n  return [];\n}\n\nfunction useProvideEmojiFavorites() {\n  const [favorites, setFavorites] = useState<Emoji[]>(getInitialValue());\n\n  const updateLocalStorage = useCallback((newFavorites: Emoji[]) => {\n    localStorage.setItem(localStorageKey, JSON.stringify(newFavorites));\n  }, []);\n\n  const toggleFavorite = useCallback(\n    (favorite: Emoji) => {\n      const newState = [...favorites];\n\n      const index = newState.findIndex((emoji) => emoji.id === favorite.id);\n      if (index !== -1) {\n        newState.splice(index, 1);\n      } else {\n        newState.push(favorite);\n      }\n\n      setFavorites(newState);\n      updateLocalStorage(newState);\n    },\n    [favorites, setFavorites, updateLocalStorage]\n  );\n\n  return { favorites, toggleFavorite };\n}\nexport default useEmojiFavories;\n","import React, { createContext, ReactChild, useContext, useState } from 'react';\nimport { EmojiVariants } from '../util/emoji/emoji.type';\n\ntype provideEmojiVariant = {\n  variant: EmojiVariants;\n  setVariant: (e: EmojiVariants) => void;\n};\n\nconst localStorageKey = 'emoji-variant';\n\nconst emojiVariantContext = createContext<provideEmojiVariant>(\n  {} as provideEmojiVariant\n);\n\nexport function ProvideEmojiVariant({ children }: { children: ReactChild }) {\n  const emojiVariant = useProvideEmojiVariant();\n  return (\n    <emojiVariantContext.Provider value={emojiVariant}>\n      {children}\n    </emojiVariantContext.Provider>\n  );\n}\n\nexport const useEmojiVariant = () => {\n  return useContext(emojiVariantContext);\n};\n\nfunction getInitialValue(): EmojiVariants {\n  const storedValue = parseInt(localStorage.getItem(localStorageKey) || '', 10);\n\n  if (storedValue && !isNaN(storedValue) && EmojiVariants[storedValue]) {\n    return storedValue;\n  } else {\n    return 0;\n  }\n}\n\nfunction useProvideEmojiVariant() {\n  const [variant, setStoredVariant] = useState<EmojiVariants>(\n    getInitialValue()\n  );\n\n  const setVariant = (newVariant: EmojiVariants) => {\n    localStorage.setItem(localStorageKey, String(newVariant));\n    setStoredVariant(newVariant);\n  };\n\n  return { variant, setVariant };\n}\nexport default useEmojiVariant;\n","import React from 'react';\nimport useEmojiVariant from '../../hooks/useEmojiVariant';\nimport { Emoji } from '../../util/emoji/emoji.type';\n\ntype DisplayEmojiProps = {\n  emoji: Emoji;\n  [x: string]: any;\n};\n\nexport function DisplayEmoji({ emoji, ...props }: DisplayEmojiProps) {\n  const { variant } = useEmojiVariant();\n\n  return (\n    <img\n      {...props}\n      src={(emoji.altSrc && emoji.altSrc[variant]) || emoji.src}\n      alt=\"\"\n      loading=\"lazy\"\n    />\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport useEmojiFavories from '../../hooks/useEmojiFavorites';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { DisplayEmoji } from '../emoji/DisplayEmoji';\n\ntype EmojiCardProps = {\n  emoji: Emoji;\n  onClick: (e: Emoji) => void;\n};\n\nexport function EmojiCard({ emoji, onClick }: EmojiCardProps) {\n  const { toggleFavorite } = useEmojiFavories();\n\n  const [mouseStart, setMouseStart] = useState<number>();\n  const [moved, setMoved] = useState<boolean>(false);\n  const [touchStartPos, setTouchStartPos] = useState<{\n    clientX: number;\n    clientY: number;\n  }>({\n    clientX: 0,\n    clientY: 0,\n  });\n\n  const handleCursorDown = useCallback(() => {\n    setMouseStart(new Date().getTime());\n    setMoved(false);\n  }, []);\n\n  const handleTouchStart = useCallback(\n    (e: React.TouchEvent<HTMLButtonElement>) => {\n      setTouchStartPos(e.touches[0]);\n      handleCursorDown();\n    },\n    [handleCursorDown]\n  );\n\n  const handleTouchMove = useCallback(\n    (e: React.TouchEvent<HTMLButtonElement>) => {\n      const { clientX, clientY } = e.touches[0];\n      if (\n        Math.abs(touchStartPos.clientX - clientX) > 10 ||\n        Math.abs(touchStartPos.clientY - clientY) > 10\n      ) {\n        setMoved(true);\n        setMouseStart(undefined);\n      }\n    },\n    [touchStartPos]\n  );\n\n  const handleCursorUp = useCallback(() => {\n    if (mouseStart && !moved) {\n      const holdDownMs = new Date().getTime() - mouseStart;\n      setMouseStart(undefined);\n\n      if (holdDownMs < 1000) {\n        onClick(emoji);\n      } else {\n        toggleFavorite(emoji);\n      }\n    }\n  }, [mouseStart, moved, emoji, onClick, toggleFavorite]);\n\n  useEffect(() => {\n    let timeoutId: number;\n    if (mouseStart) {\n      timeoutId = window.setTimeout(handleCursorUp, 1000);\n    }\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [mouseStart, handleCursorUp]);\n\n  return (\n    <div className=\"pb-100% relative select-none\">\n      <button\n        className={\n          'flex flex-col items-center shadow rounded p-2 bg-white absolute top-0 w-full h-full focus:outline-none hover:bg-orange-300 transition duration-300 draw' +\n          (mouseStart ? ' active' : '')\n        }\n        onMouseDown={handleCursorDown}\n        onMouseUp={handleCursorUp}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={(e) => {\n          e.preventDefault();\n          handleCursorUp();\n        }}>\n        <DisplayEmoji emoji={emoji} className=\"pb-8 h-full\" />\n        <span className=\"font-semibold text-gray-600 text-sm absolute bottom-2 truncate max-w-full px-2\">\n          {emoji.id}\n        </span>\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { DisplayEmoji } from '../emoji/DisplayEmoji';\n\ntype FullscreenEmojiProps = {\n  emoji: Emoji;\n  onClose: VoidFunction;\n};\n\nexport function FullscreenEmoji({ emoji, onClose }: FullscreenEmojiProps) {\n  return (\n    <div\n      className=\"fixed top-0 left-0 w-screen h-screen bg-white z-50 flex items-center justify-center\"\n      onClick={onClose}>\n      <DisplayEmoji\n        emoji={emoji}\n        className=\"w-96 h-96 max-h-vmin max-w-vmin object-contain p-8\"\n      />\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { EmojiCard } from './EmojiCard';\nimport { FullscreenEmoji } from './FullscreenEmoji';\n\ntype EmojiTableProps = {\n  emojis: Emoji[];\n};\n\nexport function EmojiTable({ emojis }: EmojiTableProps) {\n  const [fullscreenEmoji, setFullscreenEmoji] = useState<Emoji | null>(null);\n\n  const onDialogClose = useCallback(() => {\n    setFullscreenEmoji(null);\n  }, [setFullscreenEmoji]);\n\n  useEffect(() => {\n    if (fullscreenEmoji) {\n      document.body.style.overflow = 'hidden';\n      window.history.pushState(\n        null,\n        'Emoji fullscreen open',\n        window.location.pathname\n      );\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n\n    const popStateHandler = (e: PopStateEvent) => {\n      if (fullscreenEmoji) {\n        setFullscreenEmoji(null);\n      } else {\n        window.history.back();\n      }\n    };\n\n    window.addEventListener('popstate', popStateHandler);\n\n    return () => {\n      window.removeEventListener('popstate', popStateHandler);\n    };\n  }, [fullscreenEmoji]);\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 gap-2 md:gap-4\">\n        {emojis.map((emoji) => (\n          <EmojiCard\n            key={emoji.id}\n            emoji={emoji}\n            onClick={setFullscreenEmoji}\n          />\n        ))}\n      </div>\n      {fullscreenEmoji && (\n        <FullscreenEmoji emoji={fullscreenEmoji} onClose={onDialogClose} />\n      )}\n    </>\n  );\n}\n","import React, { useMemo } from 'react';\nimport useEmojiFavories from '../../hooks/useEmojiFavorites';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { EmojiTable } from './EmojiTable';\n\ntype EmojiFavoriteTableProps = {\n  emojis: Emoji[];\n};\n\nexport function EmojiFavoriteTable({ emojis }: EmojiFavoriteTableProps) {\n  const { favorites } = useEmojiFavories();\n\n  const favoriteEmojis = useMemo(() => {\n    let favoritedEmojis = favorites.map((favorite) =>\n      emojis.find((emoji) => emoji.id === favorite.id)\n    );\n    favoritedEmojis = favoritedEmojis.filter(Boolean);\n    return favoritedEmojis[0] ? (favoritedEmojis as Emoji[]) : [];\n  }, [emojis, favorites]);\n\n  return favoriteEmojis.length ? (\n    <EmojiTable emojis={favoriteEmojis} />\n  ) : (\n    <div className=\"w-full flex flex-col items-center justify-center border rounded border-gray-300 bg-gray-200 p-4\">\n      <span className=\"text-lg font-bold text-gray-600 inline-block mb-1\">\n        There are currently no favorited emojis{' '}\n        <span role=\"img\" aria-label=\"sad-face\">\n          😞\n        </span>\n      </span>\n      <span className=\"text-gray-500 text-center\">\n        You can add emojis by holding down one for 1 second{' '}\n        <span role=\"img\" aria-label=\"press-down\">\n          👇\n        </span>\n      </span>\n    </div>\n  );\n}\n","import { differenceInDays, formatISO, parseISO } from 'date-fns';\nimport { useState } from 'react';\n\n// Source: https://blog.wick.technology/pwa-install-prompt/\n\nconst getInstallPromptLastSeenAt = (promptName: string): string | null =>\n  localStorage.getItem(promptName);\n\nconst setInstallPromptSeenToday = (promptName: string): void => {\n  const today = formatISO(new Date());\n  localStorage.setItem(promptName, today);\n};\n\nfunction getUserShouldBePromptedToInstall(\n  promptName: string,\n  daysToWaitBeforePromptingAgain: number\n): boolean {\n  const lastSeenAt = getInstallPromptLastSeenAt(promptName);\n\n  if (!lastSeenAt) {\n    return true;\n  } else {\n    const lastPrompt = parseISO(lastSeenAt);\n    const daysSinceLastPrompt = differenceInDays(lastPrompt, new Date());\n    return (\n      isNaN(daysSinceLastPrompt) ||\n      daysSinceLastPrompt > daysToWaitBeforePromptingAgain\n    );\n  }\n}\n\nexport function useShouldShowPrompt(\n  promptName: string,\n  daysToWaitBeforePromptingAgain = 30\n): [boolean, () => void] {\n  const [\n    userShouldBePromptedToInstall,\n    setUserShouldBePromptedToInstall,\n  ] = useState(\n    getUserShouldBePromptedToInstall(promptName, daysToWaitBeforePromptingAgain)\n  );\n\n  const handleUserSeeingInstallPrompt = () => {\n    setUserShouldBePromptedToInstall(false);\n    setInstallPromptSeenToday(promptName);\n  };\n\n  return [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt];\n}\n","import { useEffect, useState } from 'react';\nimport { useShouldShowPrompt } from './useShouldShowPrompt';\n\n// Source: https://blog.wick.technology/pwa-install-prompt/\n\nconst webInstallPromptedAt = 'webInstallPromptedAt';\n\nconst useWebInstallPrompt = (): [any, () => void, () => void] => {\n  const [installPromptEvent, setInstallPromptEvent] = useState<\n    BeforeInstallPromptEvent\n  >();\n\n  const [\n    userShouldBePromptedToInstall,\n    handleUserSeeingInstallPrompt,\n  ] = useShouldShowPrompt(webInstallPromptedAt);\n\n  useEffect(() => {\n    const beforeInstallPromptHandler = (event: any) => {\n      console.log(event);\n      event.preventDefault();\n\n      // check if user has already been asked\n      if (userShouldBePromptedToInstall) {\n        // store the event for later use\n        setInstallPromptEvent(event as BeforeInstallPromptEvent);\n      }\n    };\n\n    window.addEventListener('beforeinstallprompt', beforeInstallPromptHandler);\n\n    return () =>\n      window.removeEventListener(\n        'beforeinstallprompt',\n        beforeInstallPromptHandler\n      );\n  }, [userShouldBePromptedToInstall]);\n\n  const handleInstallDeclined = () => {\n    handleUserSeeingInstallPrompt();\n    setInstallPromptEvent(undefined);\n  };\n\n  const handleInstallAccepted = () => {\n    if (installPromptEvent) {\n      // show native prompt\n      installPromptEvent.prompt();\n\n      // decide what to do after the user chooses\n      installPromptEvent.userChoice.then((choice) => {\n        // if the user declined, we don't want to show the prompt again\n        if (choice.outcome !== 'accepted') {\n          handleUserSeeingInstallPrompt();\n        }\n        setInstallPromptEvent(undefined);\n      });\n    }\n  };\n  return [installPromptEvent, handleInstallDeclined, handleInstallAccepted];\n};\nexport default useWebInstallPrompt;\n","import React from 'react';\nimport useWebInstallPrompt from '../../hooks/useWebInstallPrompt';\n\nexport function WebInstallPrompt() {\n  const [\n    webInstallPrompt,\n    handleWebInstallDeclined,\n    handleWebInstallAccepted,\n  ] = useWebInstallPrompt();\n\n  if (!webInstallPrompt) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4\">\n      <div className=\"flex items-center rounded border-1 border-gray-700 bg-white p-2 gap-1 shadow ml-4\">\n        <span className=\"inline-block mx-2 font-semibold\">\n          Anwendung lokal installieren?\n        </span>\n        <button\n          className=\"focus:outline-none rounded text-green-700 hover:bg-gray-300 p-1 transition duration-200\"\n          onClick={handleWebInstallAccepted}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\">\n            <polyline points=\"20 6 9 17 4 12\"></polyline>\n          </svg>\n        </button>\n        <button\n          onClick={handleWebInstallDeclined}\n          className=\"focus:outline-none rounded text-red-700 hover:bg-gray-300 p-1 transition duration-200\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\">\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function Footer() {\n  return (\n    <div className=\"flex justify-between items-center max-w-screen-lg mx-auto px-4 pb-2\">\n      <span className=\"opacity-50\">Created by Johann Lochbaum</span>\n      <div className=\"flex gap-2\">\n        <a\n          className=\"w-8 h-8 block p-1 opacity-50 hover:opacity-75 transition duration-200\"\n          href=\"https://www.linkedin.com/in/johann-lochbaum/\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"w-full h-full\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#000\">\n            <path d=\"M22.23 0H1.77C.8 0 0 .77 0 1.72v20.56C0 23.23.8 24 1.77 24h20.46c.98 0 1.77-.77 1.77-1.72V1.72C24 .77 23.2 0 22.23 0zM7.27 20.1H3.65V9.24h3.62V20.1zM5.47 7.76h-.03c-1.22 0-2-.83-2-1.87 0-1.06.8-1.87 2.05-1.87 1.24 0 2 .8 2.02 1.87 0 1.04-.78 1.87-2.05 1.87zM20.34 20.1h-3.63v-5.8c0-1.45-.52-2.45-1.83-2.45-1 0-1.6.67-1.87 1.32-.1.23-.11.55-.11.88v6.05H9.28s.05-9.82 0-10.84h3.63v1.54a3.6 3.6 0 0 1 3.26-1.8c2.39 0 4.18 1.56 4.18 4.89v6.21z\" />\n          </svg>\n        </a>\n        <a\n          className=\"w-8 h-8 block p-1 opacity-50 hover:opacity-75 transition duration-200\"\n          href=\"https://github.com/Johannitor/emoji-communicator\">\n          <svg\n            className=\"w-full h-full\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#000\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import { EmojiVariants } from './emoji.type';\n\nexport const emojiVariantSelectOptions: {\n  label: string;\n  value: EmojiVariants;\n}[] = [\n  { label: 'Apple', value: EmojiVariants.APPLE },\n  { label: 'Microsoft', value: EmojiVariants.MICROSOFT },\n  { label: 'WhatsApp', value: EmojiVariants.WHATSAPP },\n  { label: 'Google', value: EmojiVariants.GOOGLE },\n  { label: 'Twitter', value: EmojiVariants.TWITTER },\n  { label: 'Openmoji', value: EmojiVariants.OPENMOJI },\n];\n","import React from 'react';\nimport useEmojiVariant from '../../hooks/useEmojiVariant';\nimport { emojiVariantSelectOptions } from '../../util/emoji/variantSelectOptions';\n\nexport function VariantSelect() {\n  const { variant, setVariant } = useEmojiVariant();\n\n  return (\n    <select\n      className=\"p-2 border border-gray-500 rounded w-32\"\n      value={variant}\n      onChange={(e) => {\n        setVariant(Number(e.target.value));\n      }}>\n      {emojiVariantSelectOptions.map((variant) => (\n        <option key={variant.value} value={variant.value}>\n          {variant.label}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport useEmojiVariant from '../../hooks/useEmojiVariant';\nimport { emojiList } from '../../util/emoji/emoji-list.const';\nimport { Emoji, EmojiVariants } from '../../util/emoji/emoji.type';\nimport { randomBetween } from '../../util/math/random';\nimport { DisplayEmoji } from '../emoji/DisplayEmoji';\nimport { VariantSelect } from '../emoji/VariantSelect';\n\nexport function Header() {\n  const [index, setIndex] = useState<number>(0);\n  const [emoji, setEmoji] = useState<Emoji>();\n  const { variant } = useEmojiVariant();\n\n  useEffect(() => {\n    setIndex(randomBetween(0, emojiList(EmojiVariants.APPLE).length));\n  }, []);\n\n  useEffect(() => {\n    setEmoji(emojiList(variant)[index]);\n  }, [variant, index]);\n\n  return (\n    <div className=\"h-16 w-full relative bg-white shadow\">\n      <div className=\"max-w-screen-lg mx-auto justify-between items-center h-full flex px-4\">\n        <div className=\"flex items-center\">\n          {emoji && <DisplayEmoji emoji={emoji} className=\"h-10 mr-4\" />}\n          <span className=\"text-lg text-gray-900 font-bold tracking\">\n            Emoji Communicator\n          </span>\n        </div>\n        <VariantSelect />\n      </div>\n    </div>\n  );\n}\n","export function randomBetween(\n  min: number,\n  max: number,\n  float?: boolean\n): number {\n  const randomNumber = min + Math.random() * (max - min);\n  return float ? randomNumber : Math.floor(randomNumber);\n}\n","import React, { useMemo } from 'react';\nimport './assets/main.css';\nimport { EmojiFavoriteTable } from './components/emoji-table/EmojiFavoriteTable';\nimport { EmojiTable } from './components/emoji-table/EmojiTable';\nimport { WebInstallPrompt } from './components/install-prompt/WebInstallPrompt';\nimport { Footer } from './components/layout/Footer';\nimport { Header } from './components/layout/Header';\nimport { useEmojiVariant } from './hooks/useEmojiVariant';\nimport { emojiList } from './util/emoji/emoji-list.const';\n\nfunction App() {\n  const { variant } = useEmojiVariant();\n  const emojis = useMemo(() => emojiList(variant), [variant]);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"max-w-screen-lg mx-auto p-4\">\n        <h2 className=\"mb-4 text-xl font-semibold\">\n          <span role=\"img\" aria-label=\"star\">\n            ⭐\n          </span>{' '}\n          Favorited Emojis\n        </h2>\n        <EmojiFavoriteTable emojis={emojis} />\n        <h2 className=\"my-4 text-xl font-semibold\">\n          <span role=\"img\" aria-label=\"satelite\">\n            🛰\n          </span>{' '}\n          Available Emojis\n        </h2>\n        <EmojiTable emojis={emojis} />\n      </div>\n      <Footer />\n      <WebInstallPrompt />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ProvideEmojiFavorites } from './hooks/useEmojiFavorites';\nimport { ProvideEmojiVariant } from './hooks/useEmojiVariant';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProvideEmojiVariant>\n      <ProvideEmojiFavorites>\n        <App />\n      </ProvideEmojiFavorites>\n    </ProvideEmojiVariant>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}