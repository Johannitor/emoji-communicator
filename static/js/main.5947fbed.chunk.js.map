{"version":3,"sources":["components/emoji/DisplayEmoji.tsx","components/emoji-table/EmojiCard.tsx","components/emoji-table/FullscreenEmoji.tsx","components/emoji-table/EmojiTable.tsx","hooks/useShouldShowPrompt.tsx","hooks/useWebInstallPrompt.tsx","components/install-prompt/WebInstallPrompt.tsx","util/emoji/emoji-list.const.ts","components/layout/Header.tsx","util/randomArrayItem.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DisplayEmoji","emoji","props","src","alt","loading","EmojiCard","onClick","className","id","FullscreenEmoji","onClose","EmojiTable","emojies","useState","fullscreenEmoji","setFullscreenEmoji","onDialogClose","useCallback","useEffect","document","body","style","overflow","map","key","setInstallPromptSeenToday","promptName","today","formatISO","Date","localStorage","setItem","getUserShouldBePromptedToInstall","daysToWaitBeforePromptingAgain","lastSeenAt","getItem","getInstallPromptLastSeenAt","lastPrompt","parseISO","daysSinceLastPrompt","differenceInDays","isNaN","useWebInstallPrompt","installPromptEvent","setInstallPromptEvent","userShouldBePromptedToInstall","setUserShouldBePromptedToInstall","handleUserSeeingInstallPrompt","useShouldShowPrompt","beforeInstallPromptHandler","event","console","log","preventDefault","window","addEventListener","removeEventListener","undefined","prompt","userChoice","then","choice","outcome","WebInstallPrompt","webInstallPrompt","handleWebInstallDeclined","handleWebInstallAccepted","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","baseUrl","emojiList","Header","setEmoji","array","arrayLength","length","Math","floor","random","randomArrayItem","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5947fbed.chunk.js","sourcesContent":["import React from 'react';\nimport { Emoji } from '../../util/emoji/emoji.type';\n\ntype DisplayEmojiProps = {\n  emoji: Emoji;\n  [x: string]: any;\n};\n\nexport function DisplayEmoji({ emoji, ...props }: DisplayEmojiProps) {\n  return <img {...props} src={emoji.src} alt=\"\" loading=\"lazy\" />;\n}\n","import React from 'react';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { DisplayEmoji } from '../emoji/DisplayEmoji';\n\ntype EmojiCardProps = {\n  emoji: Emoji;\n  onClick: (e: Emoji) => void;\n};\n\nexport function EmojiCard({ emoji, onClick }: EmojiCardProps) {\n  return (\n    <div className=\"pb-100% relative\">\n      <button\n        className=\"flex flex-col items-center shadow rounded p-2 bg-white absolute top-0 w-full h-full focus:outline-none hover:bg-orange-300 focus:bg-orange-300 transition duration-300\"\n        onClick={() => {\n          onClick(emoji);\n        }}>\n        <DisplayEmoji emoji={emoji} className=\"pb-8 h-full\" />\n        <span className=\"font-semibold text-gray-600 text-sm absolute bottom-2 truncate max-w-full px-2\">\n          {emoji.id}\n        </span>\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { DisplayEmoji } from '../emoji/DisplayEmoji';\n\ntype FullscreenEmojiProps = {\n  emoji: Emoji;\n  onClose: VoidFunction;\n};\n\nexport function FullscreenEmoji({ emoji, onClose }: FullscreenEmojiProps) {\n  return (\n    <div\n      className=\"fixed top-0 left-0 w-screen h-screen bg-white z-50 flex items-center justify-center\"\n      onClick={onClose}>\n      <DisplayEmoji\n        emoji={emoji}\n        className=\"w-96 h-96 max-h-vmin max-w-vmin object-contain p-8\"\n      />\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { EmojiCard } from './EmojiCard';\nimport { FullscreenEmoji } from './FullscreenEmoji';\n\ntype EmojiTableProps = {\n  emojies: Emoji[];\n};\n\nexport function EmojiTable({ emojies }: EmojiTableProps) {\n  const [fullscreenEmoji, setFullscreenEmoji] = useState<Emoji | null>(null);\n\n  const onDialogClose = useCallback(() => {\n    setFullscreenEmoji(null);\n  }, [setFullscreenEmoji]);\n\n  useEffect(() => {\n    if (!!fullscreenEmoji) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n  }, [fullscreenEmoji]);\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 gap-2 md:gap-4\">\n        {emojies.map((emoji) => (\n          <EmojiCard\n            key={emoji.id}\n            emoji={emoji}\n            onClick={setFullscreenEmoji}\n          />\n        ))}\n      </div>\n      {fullscreenEmoji && (\n        <FullscreenEmoji emoji={fullscreenEmoji} onClose={onDialogClose} />\n      )}\n    </>\n  );\n}\n","import { differenceInDays, formatISO, parseISO } from 'date-fns';\nimport { useState } from 'react';\n\n// Source: https://blog.wick.technology/pwa-install-prompt/\n\nconst getInstallPromptLastSeenAt = (promptName: string): string | null =>\n  localStorage.getItem(promptName);\n\nconst setInstallPromptSeenToday = (promptName: string): void => {\n  const today = formatISO(new Date());\n  localStorage.setItem(promptName, today);\n};\n\nfunction getUserShouldBePromptedToInstall(\n  promptName: string,\n  daysToWaitBeforePromptingAgain: number\n): boolean {\n  const lastSeenAt = getInstallPromptLastSeenAt(promptName);\n\n  if (!lastSeenAt) {\n    return true;\n  } else {\n    const lastPrompt = parseISO(lastSeenAt);\n    const daysSinceLastPrompt = differenceInDays(lastPrompt, new Date());\n    return (\n      isNaN(daysSinceLastPrompt) ||\n      daysSinceLastPrompt > daysToWaitBeforePromptingAgain\n    );\n  }\n}\n\nexport function useShouldShowPrompt(\n  promptName: string,\n  daysToWaitBeforePromptingAgain = 30\n): [boolean, () => void] {\n  const [\n    userShouldBePromptedToInstall,\n    setUserShouldBePromptedToInstall,\n  ] = useState(\n    getUserShouldBePromptedToInstall(promptName, daysToWaitBeforePromptingAgain)\n  );\n\n  const handleUserSeeingInstallPrompt = () => {\n    setUserShouldBePromptedToInstall(false);\n    setInstallPromptSeenToday(promptName);\n  };\n\n  return [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt];\n}\n","import { useEffect, useState } from 'react';\nimport { useShouldShowPrompt } from './useShouldShowPrompt';\n\n// Source: https://blog.wick.technology/pwa-install-prompt/\n\nconst webInstallPromptedAt = 'webInstallPromptedAt';\n\nconst useWebInstallPrompt = (): [any, () => void, () => void] => {\n  const [installPromptEvent, setInstallPromptEvent] = useState<\n    BeforeInstallPromptEvent\n  >();\n\n  const [\n    userShouldBePromptedToInstall,\n    handleUserSeeingInstallPrompt,\n  ] = useShouldShowPrompt(webInstallPromptedAt);\n\n  useEffect(() => {\n    const beforeInstallPromptHandler = (event: any) => {\n      console.log(event);\n      event.preventDefault();\n\n      // check if user has already been asked\n      if (userShouldBePromptedToInstall) {\n        // store the event for later use\n        setInstallPromptEvent(event as BeforeInstallPromptEvent);\n      }\n    };\n\n    window.addEventListener('beforeinstallprompt', beforeInstallPromptHandler);\n\n    return () =>\n      window.removeEventListener(\n        'beforeinstallprompt',\n        beforeInstallPromptHandler\n      );\n  }, [userShouldBePromptedToInstall]);\n\n  const handleInstallDeclined = () => {\n    handleUserSeeingInstallPrompt();\n    setInstallPromptEvent(undefined);\n  };\n\n  const handleInstallAccepted = () => {\n    if (installPromptEvent) {\n      // show native prompt\n      installPromptEvent.prompt();\n\n      // decide what to do after the user chooses\n      installPromptEvent.userChoice.then((choice) => {\n        // if the user declined, we don't want to show the prompt again\n        if (choice.outcome !== 'accepted') {\n          handleUserSeeingInstallPrompt();\n        }\n        setInstallPromptEvent(undefined);\n      });\n    }\n  };\n  return [installPromptEvent, handleInstallDeclined, handleInstallAccepted];\n};\nexport default useWebInstallPrompt;\n","import React from 'react';\nimport useWebInstallPrompt from '../../hooks/useWebInstallPrompt';\n\nexport function WebInstallPrompt() {\n  const [\n    webInstallPrompt,\n    handleWebInstallDeclined,\n    handleWebInstallAccepted,\n  ] = useWebInstallPrompt();\n\n  if (!webInstallPrompt) {\n    return null;\n  }\n\n  return (\n    <div className=\"w-full max-w-full fixed bottom-2 flex justify-center\">\n      <div className=\"flex items-center rounded bg-orange-400 text-orange-900 p-2 gap-1 shadow mx-2\">\n        <span className=\"inline-block mr-2\">Anwendung lokal installieren?</span>\n        <button\n          className=\"px-2 py-1 bg-orange-900 text-white rounded\"\n          onClick={handleWebInstallAccepted}>\n          Installieren\n        </button>\n        <button\n          onClick={handleWebInstallDeclined}\n          className=\"focus:outline-none rounded hover:bg-orange-500 p-1 transition duration-200\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\">\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Emoji } from './emoji.type';\n\nconst baseUrl =\n  'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/237/';\n\nexport const emojiList: Emoji[] = [\n  {\n    id: 'smily_smile',\n    src: baseUrl + 'smiling-face-with-smiling-eyes_1f60a.png',\n  },\n  {\n    id: 'smily_frown',\n    src: baseUrl + 'white-frowning-face_2639.png',\n  },\n  {\n    id: 'smily_angry',\n    src: baseUrl + 'pouting-face_1f621.png',\n  },\n  {\n    id: 'smily_shocked',\n    src: baseUrl + 'face-screaming-in-fear_1f631.png',\n  },\n  {\n    id: 'smily_hearts',\n    src: baseUrl + 'smiling-face-with-heart-shaped-eyes_1f60d.png',\n  },\n  {\n    id: 'smily_raised',\n    src: baseUrl + 'face-with-one-eyebrow-raised_1f928.png',\n  },\n  {\n    id: 'smily_shush',\n    src: baseUrl + 'face-with-finger-covering-closed-lips_1f92b.png',\n  },\n  {\n    id: 'smily_sleep',\n    src: baseUrl + 'sleeping-face_1f634.png',\n  },\n  {\n    id: 'smily_party',\n    src: baseUrl + 'face-with-party-horn-and-party-hat_1f973.png',\n  },\n  {\n    id: 'waving',\n    src: baseUrl + 'waving-hand-sign_1f44b.png',\n  },\n  {\n    id: 'thumbs_up',\n    src: baseUrl + 'thumbs-up-sign_1f44d.png',\n  },\n  {\n    id: 'thumbs_down',\n    src: baseUrl + 'thumbs-down-sign_1f44e.png',\n  },\n  {\n    id: 'ok',\n    src: baseUrl + 'ok-hand-sign_1f44c.png',\n  },\n  {\n    id: 'fingers_crossed',\n    src: baseUrl + 'hand-with-index-and-middle-fingers-crossed_1f91e.png',\n  },\n  {\n    id: 'raised_hand_man',\n    src: baseUrl + 'man-raising-hand-type-1-2_1f64b-1f3fb-200d-2642-fe0f.png',\n  },\n  {\n    id: 'raised_hand_woman',\n    src: baseUrl + 'woman-raising-hand-type-1-2_1f64b-1f3fb-200d-2640-fe0f.png',\n  },\n  {\n    id: 'cake',\n    src: baseUrl + 'shortcake_1f370.png',\n  },\n  {\n    id: 'lit',\n    src: baseUrl + 'fire_1f525.png',\n  },\n  {\n    id: 'hourglass',\n    src: baseUrl + 'hourglass_231b.png',\n  },\n  {\n    id: 'party',\n    src: baseUrl + 'party-popper_1f389.png',\n  },\n  {\n    id: 'magic',\n    src: baseUrl + 'crystal-ball_1f52e.png',\n  },\n  { id: 'telephone', src: baseUrl + 'telephone-receiver_1f4de.png' },\n  { id: 'microphone', src: baseUrl + 'microphone_1f3a4.png' },\n  {\n    id: 'walking_woman',\n    src: baseUrl + 'woman-walking-type-1-2_1f6b6-1f3fb-200d-2640-fe0f.png',\n  },\n  {\n    id: 'walking_man',\n    src: baseUrl + 'man-walking-type-1-2_1f6b6-1f3fb-200d-2642-fe0f.png',\n  },\n  { id: 'joker', src: baseUrl + 'playing-card-black-joker_1f0cf.png' },\n  { id: 'wtf', src: baseUrl + 'exclamation-question-mark_2049.png' },\n];\n","import React, { useEffect, useState } from 'react';\nimport { emojiList } from '../../util/emoji/emoji-list.const';\nimport { Emoji } from '../../util/emoji/emoji.type';\nimport { randomArrayItem } from '../../util/randomArrayItem';\nimport { DisplayEmoji } from '../emoji/DisplayEmoji';\n\nexport function Header() {\n  const [emoji, setEmoji] = useState<Emoji>();\n\n  useEffect(() => {\n    setEmoji(randomArrayItem(emojiList));\n  }, []);\n\n  return (\n    <div className=\"h-16 w-full relative bg-white shadow\">\n      <div className=\"max-w-screen-lg mx-auto items-center h-full flex px-4\">\n        {emoji && <DisplayEmoji emoji={emoji} className=\"h-10 mr-2\" />}\n        <span className=\"text-lg text-gray-900 font-bold tracking\">\n          Emoji Communicator\n        </span>\n      </div>\n    </div>\n  );\n}\n","export function randomArrayItem<T>(array: T[]): T {\n  const arrayLength = array.length;\n  const index = Math.floor(Math.random() * arrayLength);\n\n  return array[index];\n}\n","import React from 'react';\nimport './assets/main.css';\nimport { EmojiTable } from './components/emoji-table/EmojiTable';\nimport { WebInstallPrompt } from './components/install-prompt/WebInstallPrompt';\nimport { Header } from './components/layout/Header';\nimport { emojiList } from './util/emoji/emoji-list.const';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"max-w-screen-lg mx-auto p-4\">\n        <EmojiTable emojies={emojiList} />\n      </div>\n      <WebInstallPrompt />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}